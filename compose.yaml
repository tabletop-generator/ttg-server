name: ttg
services:
  postgres:
    container_name: ttg-postgres
    image: postgres:17.2-alpine3.21
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env.compose
    init: true

  minio:
    container_name: ttg-minio
    image: minio/minio
    command: server --console-address ":9001" /data
    ports:
      # The minio API endpoint
      - "9000:9000"
      # The minio web console endpoint
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    env_file:
      - .env.compose
    init: true

  mc:
    container_name: ttg-minio-client
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
      # Create bucket if missing
    entrypoint: >
      /bin/sh -c "
      until (mc alias set local http://minio:9000 $$MINIO_ROOT_USER $$MINIO_ROOT_PASSWORD && mc mb --region us-east-2 --ignore-existing local/ttg); do
        echo 'Waiting for MinIO to be ready...';
        sleep 5;
      done;
      "
    env_file:
      - .env.compose

volumes:
  postgres_data:
  minio_data:
